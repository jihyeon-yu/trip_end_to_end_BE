<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.trip.plan_board.model.mapper.PlanBoardMapper">

	<select id="listArticle" resultType="planBoardDto">
		select *
		from plan_board
	</select>

	<select id="detailArticleById" parameterType="String"
		resultType="planBoardDto">
		select * from plan_board
		where plan_board_id =
		#{plan_board_id}
	</select>

	<select id="listTagById" parameterType="String"
		resultType="planBoardTagDto">
		select pbt.plan_board_tag_id planBoardTagId,
		pbt.plan_board_id planBoardId,
		pbt.tag_type_id tagTypeId,
		tt.tag_group_id tagGroupId,
		tt.name name
		from plan_board_tag pbt
		left join tag_type tt on pbt.tag_type_id = tt.tag_type_id
		where plan_board_id =
		#{plan_board_id}
	</select>

	<select id="listCommentById" parameterType="String"
		resultType="planCommentDto">
		select pc.comment_id commentId,
		pc.plan_board_id planBoardId,
		pc.member_id memberId,
		m.nickname nickname,
		pc.content content,
		pc.depth depth,
		pc.comment_group commentGroup,
		pc.deleted deleted,
		pc.register_time registerTime
		from plan_comment pc
		left join member m on pc.member_id =
		m.member_id
		where pc.plan_board_id = #{planBoardId}
		order by comment_id desc
	</select>

	<select id="listLikeById" parameterType="String"
		resultType="planLikeDto">
		select * from plan_like
		where plan_board_id =
		#{plan_board_id}
	</select>

	<insert id="insertArticle" parameterType="planBoardDto" useGeneratedKeys="true" keyProperty="planBoardId">
		insert into plan_board (member_id, subject, content, start_date,
		end_date, the_number_of_members
		<if test="thumbnail != null and thumbnail != '' ">
			, thumbnail
		</if>
		)
		values (#{memberId}, #{subject}, #{content}, #{startDate},
		#{endDate}, #{theNumberOfMembers}
		<if test="thumbnail != null and thumbnail != ''">
			, #{thumbnail}
		</if>
		)
	</insert>

	<update id="modifyArticle" parameterType="planBoardDto">
		update plan_board
		set
		subject = #{subject}, content = #{content}, start_date = #{startDate},
		end_date = #{endDate}, the_number_of_members = #{theNumberOfMembers}
		where plan_board_id = #{planBoardId}
	</update>

	<update id="updateHit" parameterType="String">
		update plan_board
		set hit =
		hit + 1
		where plan_board_id = #{planBoardId}
	</update>

	<delete id="deleteArticle" parameterType="String">
		delete from plan_board
		where plan_board_id = #{planBoardId}
	</delete>

	<!-- Tag -->
	<insert id="insertTag" parameterType="planBoardTagDto">
		insert into
		plan_board_tag
		(plan_board_id, tag_type_id)
		values(#{planBoardId},
		#{tagTypeId})
	</insert>
	<delete id="deleteTag" parameterType="String">
		delete from
		plan_board_tag
		where plan_board_id = #{planBoardId}
	</delete>
	<select id="searchTag" parameterType="String"
		resultType="tagTypeDto">
		select * from tag_type
		where name like concat('%',
		#{tagName}, '%')
	</select>
	<!-- Comment -->
	<insert id="insertComment" parameterType="planCommentDto">
		insert into
		plan_comment
		(plan_board_id, member_id, content, depth, comment_group)
		values(#{planBoardId}, #{memberId}, #{content}, #{depth},
		#{commentGroup})
	</insert>
	<update id="deleteComment" parameterType="String">
		delete from plan_comment
		where comment_id = #{commentId}
	</update>
	<update id="modifyComment" parameterType="planCommentDto">
		update plan_comment
		set
		content = #{content}
		where comment_id = #{commentId}
	</update>

	<!-- Like -->
	<insert id="insertLike" parameterType="planLikeDto">
		insert into plan_like
		(member_id, plan_board_id)
		values (#{memberId}, #{planBoardId})
	</insert>
	<delete id="deleteLike" parameterType="String">
		delete from
		plan_like
		where
		plan_like_id = #{planLikeId}
	</delete>

	<!-- Map -->
	<select id="getSidoList"
		resultType="com.trip.plan_board.model.dto.SidoDto">
		select sido_code sidoCode, sido_name sidoName
		from sido
	</select>

	<select id="getGugunList" parameterType="String"
		resultType="com.trip.plan_board.model.dto.GugunDto">
		select gugun_code gugunCode, gugun_name gugunName,
		sido_code sidoCode
		from gugun
		where sido_code = #{sidoCode}
	</select>

	<select id="getAttractionInfoList" parameterType="map"
		resultType="com.trip.plan_board.model.dto.AttractionInfoDto">
		select *
		from attraction_info
		<where>
			<if test="areaCode != null and areaCode != 0">
				and sido_code = #{areaCode}
			</if>
			<if test="gugunCode != null and gugunCode != 0">
				and gugun_code = #{gugunCode}
			</if>
			<if test="contentTypeId != null and contentTypeId != 0">
				and content_type_id = #{contentTypeId}
			</if>
			<if test="keyword != null">
				and title like concat('%', #{keyword}, '%')
			</if>
		</where>
		limit 30
	</select>

	<select id="getAttractionDescription" parameterType="String"
		resultType="com.trip.plan_board.model.dto.AttractionDescriptionDto">
		select *
		from attraction_description
		where content_id =
		#{contentId}
	</select>

	<!-- File -->
	<insert id="registerFile" parameterType="planBoardFileInfoDto">
		insert into plan_board_file_info
		(plan_board_id, save_folder, original_file, save_file)
		values
		(#{planBoardId}, #{saveFolder}, #{originalFile}, #{saveFile})
	</insert>
	
	<select id="fileInfo" parameterType="String" resultType="planBoardFileInfoDto">
		select * from plan_board_file_info
		where plan_board_id = #{planBoardId}
	</select>
	
	<update id="updateFile" parameterType="planBoardFileInfoDto">
		update plan_board_file_info
		set save_folder = #{saveFolder},
		original_file = #{originalFile},
		save_file = #{saveFile}
		where plan_board_id = #{planBoardId}
	</update>
	

</mapper>